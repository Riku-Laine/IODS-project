summary(lrn14$Age)
# The summary provided me with the age-range of the respondents from 17 to 55 years. The average-age of the respondents is 25,58 years. The median-age is 22.
#printing and summarizing "Points"
lrn14$points <- lrn14$Points / 10
lrn14$points
summary(lrn14$Points)
# The points reach from 0 to a maximum of 33. The average exam-points are 20,61. The Median-value of the Variable points is 22.00.
colnames(lrn14)
#Scaling down "Attitude" to attitude
lrn14$attitude <- lrn14$Attitude / 10
lrn14$attitude
summary(lrn14$attitude)
#At least that looks like it works...
#Let's try the combination of variables to "deep_questions" again:
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
summarise(deep_questions)
deep_questions
#creating the basic column:
deep_columns <- select(lrn14, one_of(deep_questions))
deep_columns
#applying means to "deep_columns":
lrn14$deep <- rowMeans(deep_columns)
lrn14$deep
# combining variables to "surface question"
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
surface_questions
summarise(surface_questions)
#creating "surface_columns"
surface_columns <- select(lrn14, one_of(surface_questions))
surface_columns
#applying means to "surface_columns"
lrn14$surf <- rowMeans(surface_columns)
lrn14$surf
summarise(lrn14$surf)
#creating variable "strategic_questions"
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
strategic_questions
summarise(strategic_questions)
#creating "strategic_columns"
strategic_columns <- select(lrn14, one_of (strategic_questions))
strategic_columns
#applying means to "strategic_columns"
lrn14$stra <- rowMeans(strategic_columns)
lrn14$stra
# keeping columns for new dataset
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "points")
learning2014 <- select (lrn14, one_of (keep_columns))
str(learning2014)
colnames((learning2014))
# Attempting to exclude those respondents who in their exams had "o" points
learning2014 <- filter(learning2014, points > "0")
str(learning2014)
dim(learning2014)
setwd("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project")
?write.csv
?write.table
write.csv(learning2014, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\learning2014.csv",row.names = FALSE)
read.table("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\learning2014.csv")
dim("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\learning2014.csv")
p1 <- ggplot(learning2014, aes(x = attitude, y = points))
p1 <- ggplot(learning2014, aes (x = attitude, y = points, col = gender))
p2 <- p1 + geom_point()
p2
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ggplot2", dep = TRUE)
# printing and summarizing "gender"
lrn14$gender
summary(lrn14$gender)
# The printing of these data confirmed the binary character of the data. The summary supplied the information that the 183 observations are thus divided in 122 female and 61 male respondents.
# printing and summarizing "Age"
lrn14$Age
summary(lrn14$Age)
# The summary provided me with the age-range of the respondents from 17 to 55 years. The average-age of the respondents is 25,58 years. The median-age is 22.
#printing and summarizing "Points"
lrn14$points <- lrn14$Points / 10
lrn14$points
summary(lrn14$Points)
# The points reach from 0 to a maximum of 33. The average exam-points are 20,61. The Median-value of the Variable points is 22.00.
colnames(lrn14)
#Scaling down "Attitude" to attitude
lrn14$attitude <- lrn14$Attitude / 10
lrn14$attitude
summary(lrn14$attitude)
#At least that looks like it works...
#Let's try the combination of variables to "deep_questions" again:
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
summarise(deep_questions)
deep_questions
#creating the basic column:
deep_columns <- select(lrn14, one_of(deep_questions))
deep_columns
#applying means to "deep_columns":
lrn14$deep <- rowMeans(deep_columns)
lrn14$deep
# combining variables to "surface question"
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
surface_questions
summarise(surface_questions)
#creating "surface_columns"
surface_columns <- select(lrn14, one_of(surface_questions))
surface_columns
#applying means to "surface_columns"
lrn14$surf <- rowMeans(surface_columns)
lrn14$surf
summarise(lrn14$surf)
#creating variable "strategic_questions"
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
strategic_questions
summarise(strategic_questions)
#creating "strategic_columns"
strategic_columns <- select(lrn14, one_of (strategic_questions))
strategic_columns
#applying means to "strategic_columns"
lrn14$stra <- rowMeans(strategic_columns)
lrn14$stra
# keeping columns for new dataset
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "points")
learning2014 <- select (lrn14, one_of (keep_columns))
str(learning2014)
colnames((learning2014))
# Attempting to exclude those respondents who in their exams had "o" points
learning2014 <- filter(learning2014, points > "0")
str(learning2014)
dim(learning2014)
setwd("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project")
?write.csv
?write.table
write.csv(learning2014, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\learning2014.csv",row.names = FALSE)
read.table("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\learning2014.csv")
dim("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\learning2014.csv")
p1 <- ggplot(learning2014, aes(x = attitude, y = points))
p1 <- ggplot(learning2014, aes (x = attitude, y = points, col = gender))
p2 <- p1 + geom_point()
p2
rm(list=ls())
?summarise
quti()
quit()
13**2
2**13
# Author: Riku Laine
# Date: Tue Nov 21 12:04:36 2017
# Project name: Riku Laine
# Description
# --------------
# Author:
# Date:
# Modification:
# --------------
# Preparations (source() and library())
library(dplyr)
#### Importing data
# Set working directory
setwd("C:/Users/Riku_L/Documents/GitHub/IODS-project/data/")
# Reading the csv files
stumat <- read.csv("student-mat.csv", sep=";")
stupor <- read.csv("student-por.csv", sep=";")
# Explore structures and dimensions
dim(stumat)
dim(stupor)
# Stumat has 395 rows and stupor has 649 rows, both have 33 columns.
str(stumat)
str(stupor)
# It seems both include some information from the respondents' demographic
# background and alcohol use.
# Check if all column names are the same
all.equal(colnames(stumat), colnames(stupor))
# They are.
#### Merging
join_variables <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery","internet")
joined_data <- inner_join(stumat, stupor, by = join_variables, suffix = c("-mat", "-por"))
# Structure and dimensions
str(joined_data)
# It seems that the columns which were used to combine sets haven't
# duplicated while the others have.
# Combining duplicates into the data
notjoined_columns <- colnames(stumat)[!colnames(stumat) %in% join_variables]
alc <- joined_data[colnames(joined_data) %in% join_variables]
for(column_name in notjoined_columns) {
two_columns <- select(stumat, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# Author: Riku Laine
# Date: Tue Nov 21 12:04:36 2017
# Project name: Riku Laine
# Description
# --------------
# Author:
# Date:
# Modification:
# --------------
# Preparations (source() and library())
library(dplyr)
#### Importing data
# Set working directory
setwd("C:/Users/Riku_L/Documents/GitHub/IODS-project/data/")
# Reading the csv files
stumat <- read.csv("student-mat.csv", sep=";")
stupor <- read.csv("student-por.csv", sep=";")
# Explore structures and dimensions
dim(stumat)
dim(stupor)
# Stumat has 395 rows and stupor has 649 rows, both have 33 columns.
str(stumat)
str(stupor)
# It seems both include some information from the respondents' demographic
# background and alcohol use.
# Check if all column names are the same
all.equal(colnames(stumat), colnames(stupor))
# They are.
#### Merging
join_variables <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery","internet")
joined_data <- inner_join(stumat, stupor, by = join_variables, suffix = c("-mat", "-por"))
# Structure and dimensions
str(joined_data)
# It seems that the columns which were used to combine sets haven't
# duplicated while the others have.
# Combining duplicates into the data
notjoined_columns <- colnames(stumat)[!colnames(stumat) %in% join_variables]
alc <- joined_data[colnames(joined_data) %in% join_variables]
for(column_name in notjoined_columns) {
two_columns <- select(joined_data, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
rowMeans(alc[, c("Dalc", "Walc")])
alc$alc_use <- rowMeans(alc[, c("Dalc", "Walc")])
alc$high_use <- alc$alc_use > 2
glimpse(alc)
glimpse(joined_data)
write.csv("alc.csv", row.names = F)
write.csv(alc, "alc.csv", row.names = F)
head(read.csv("alc.csv"))
alc <- read.csv("alc.csv")
colnames(alc)
alc <- read.csv("alc.csv")
cat("Colnames: ")
colnames(alc)
alc <- read.csv("alc.csv")
cat("Colnames: \n")
colnames(alc)
alc <- read.csv("alc.csv")
cat("Column names: \n\n")
colnames(alc)
dim(alc)
table(alc$sex)
table(alc$internet, alc$high_use)
prop.table(table(alc$internet, alc$high_use))
chisq.test(table(alc$internet, alc$high_use))
?complete.cases
table(alc$nursery, alc$high_use)
table(alc$nursery, alc$high_use)
table(alc$famsize, alc$high_use)
table(alc$famrel,  alc$high_use)
table(alc$absences, alc$high_use)
plot(density(alc$absences[alc$high_use]))
lines(density(alc$absences[!alc$high_use]), col='red'))
plot(density(alc$absences[alc$high_use]))
lines(density(alc$absences[!alc$high_use]), col='red')
plot(density(alc$absences[!alc$high_use]))
lines(density(alc$absences[alc$high_use]), col='red')
plot(density(alc$absences[!alc$high_use]), xlab='Absences')
plot(density(alc$absences[!alc$high_use]), xlab='Absences')
lines(density(alc$absences[alc$high_use]), col='red')
boxplot(alc$absences ~ alc$high_use)
boxplot(alc$absences ~ alc$high_use, ylim=c(0,30))
plot(density(alc$absences[!alc$high_use]), xlab='Absences')
lines(density(alc$absences[alc$high_use]), col='red')
boxplot(alc$absences ~ alc$high_use, ylim=c(0,30))
plot(density(alc$absences[!alc$high_use]), xlab='Absences')
lines(density(alc$absences[alc$high_use]), col='red')
legend(c(levels(alc$high_use)))
legend(legend=c(levels(alc$high_use)))
c(levels(alc$high_use))
legend(legend=c('High', 'Low'))
plot(density(alc$absences[!alc$high_use]), xlab='Absences')
lines(density(alc$absences[alc$high_use]), col='red')
legend(legend=c('High', 'Low'), x = 'topright')
legend(legend=c('High', 'Low'), x = 'topright', col = c('red', 'black'))
table(alc$nursery, alc$high_use)
table(alc$famsize, alc$high_use)
table(alc$famrel,  alc$high_use)
table(alc$absences, alc$high_use)
plot(density(alc$absences[!alc$high_use]), xlab='Absences')
lines(density(alc$absences[alc$high_use]), col='red')
legend(legend=c('High', 'Low'), x = 'topright', col = c('red', 'black'))
boxplot(alc$absences ~ alc$high_use, ylim=c(0,30))
boxplot(alc$absences ~ alc$high_use, ylim=c(0,30), horizontal=T)
boxplot(alc$absences ~ alc$high_use, horizontal=T, log='x')
boxplot(alc$absences ~ alc$high_use, horizontal=T, log='y')
boxplot(alc$absences ~ alc$high_use, horizontal=T)
boxplot(alc$absences ~ alc$high_use, horizontal=T,
main = 'bk')
ggplot(alc, aes(y = absences, x = high_use))
library(ggplot2)
ggplot(alc, aes(y = absences, x = high_use))
ggplot(alc, aes(y = absences, x = high_use)) + geom_boxplot()
?ggplot
?aes
ggplot(alc, aes(y = absences, x = high_use)) + geom_boxplot() + scale_y_log10()
boxplot(alc$absences ~ alc$high_use, horizontal=T,
main = 'High use of alcohol by absences')
boxplot(alc$absences ~ alc$high_use, horizontal=T,
main = 'High use of alcohol by absences', las=1)
boxplot(alc$absences ~ alc$high_use, horizontal=T,
main = 'High use of alcohol by absences', las=1,
xlab='Absences')
summary(alc$absences ~ alc$high_use)
summary(alc$absences[alc$high_use])
temp <- summary(alc$absences[alc$high_use])
rbind(temp, summary(alc$absences[!alc$high_use]))
temp
?rbind
temp <- rbind(temp, summary(alc$absences[!alc$high_use]), rownames(c('T', 'F')))
temp
table(alc$famrel,  alc$high_use)
barplot(alc$famrel,  alc$high_use)
barplot(alc$famrel)
?barplot
ggplot(alc, aes(famrel, fill=high_use))+geom_bar()
ggplot(alc, aes(famrel, fill=high_use))+geom_bar(position='dodge')
table(alc$famsize, alc$high_use)
prop.table(alc$famrel,  alc$high_use, margin = 2)
prop.table(table(alc$famrel,  alc$high_use))
?prop.tbale
?prop.table
prop.table(table(alc$famrel,  alc$high_use), 2)
barplot(prop.table(table(alc$famrel,  alc$high_use), 2))
ggplot(alc, aes(famrel, fill=high_use))+geom_bar(position='dodge',stat = "identity")
ggplot(alc, aes(famrel, fill=high_use))+geom_bar(position='dodge)
)
k
öoköpkökpäål'
)
ggplot(alc, aes(famrel, fill=high_use))+geom_bar(position='dodge')
alc <- read.csv("alc.csv")
cat("Column names:\n\n")
colnames(alc)
table(alc$nursery, alc$high_use)
table(alc$famsize, alc$high_use)
table(alc$famrel,  alc$high_use)
table(alc$absences, alc$high_use)
plot(density(alc$absences[!alc$high_use]), xlab='Absences')
lines(density(alc$absences[alc$high_use]), col='red')
legend(legend=c('High', 'Low'), x = 'topright', col = c('red', 'black'))
# library(ggplot2)
# ggplot(alc, aes(y = absences, x = high_use)) + geom_boxplot() + scale_y_log10()
boxplot(alc$absences ~ alc$high_use, horizontal=T,
main = 'High use of alcohol by absences', las=1,
xlab='Absences')
temp <- summary(alc$absences[alc$high_use])
temp <- rbind(temp, summary(alc$absences[!alc$high_use]))
ggplot(alc, aes(famrel, fill=high_use))+geom_bar(position='dodge')
table(alc$nursery, alc$high_use)
prop.table(table(alc$nursery, alc$high_use), 2)
taulu <- table(alc$nursery, alc$high_use)
chisq.test(taulu)
fisher.test(taulu)
taulu
chisq.test(taulu)
taulu <- table(alc$nursery, alc$high_use)
prop.table(taulu, 2)
table(alc$famsize, alc$high_use)
taulu_fam <- table(alc$famsize, alc$high_use)
prop.table(taulu_fam, 2)
taulu_fam
prop.table(taulu_fam, 2)
table(alc$famrel,  alc$high_use)
library(ggplot2)
ggplot(alc, aes(famrel, fill=high_use))+geom_bar(position='dodge')+
ggtitle("Family relations and alcohol use", subtitle = '1 - very bad to 5 - excellent')
ggplot(alc, aes(famrel, fill=high_use))+geom_bar(position='dodge', stat = 'identity')+
ggtitle("Family relations and alcohol use", subtitle = '1 - very bad to 5 - excellent')
ggplot(alc, aes(famrel, y = ..ncount.., fill=high_use))+geom_bar(position='dodge', stat = 'identity')+
ggtitle("Family relations and alcohol use", subtitle = '1 - very bad to 5 - excellent')
ggplot(alc, aes(famrel, fill=high_use))+geom_bar(position='dodge')+  scale_y_continuous(labels = percent_format())+
ggtitle("Family relations and alcohol use", subtitle = '1 - very bad to 5 - excellent')
taulu_famrel <- table(alc$famrel, alc$high_use)
taulu_famrel
taulu_famrel <- prop.table(table(alc$famrel, alc$high_use), 2)
taulu_famrel
str(taulu_famrel)
taulu_famrel <- as.data.frame(prop.table(table(alc$famrel, alc$high_use), 2))
str(taulu_famrel)
taulu_famrel <- prop.table(table(alc$famrel, alc$high_use), 2)
ggplot(taulu_famrel, aes(taulu_famrel, fill=high_use))+geom_bar(position='dodge')+
ggtitle("Family relations and alcohol use", subtitle = '1 - very bad to 5 - excellent')
barplot(taulu_famrel)
ggplot(taulu_famrel)
ggplot(as.data.frame(taulu_famrel))
ggplot(as.data.frame(taulu_famrel))
ggplot(alc, aes(famrel, fill=high_use))+geom_bar(position='dodge')+
ggtitle("Family relations and alcohol use", subtitle = '1 - very bad to 5 - excellent')
ggplot(alc, aes(famrel, fill=high_use))+geom_bar(position='dodge')+
ggtitle("Family relations and alcohol use", subtitle = '1 - very bad to 5 - excellent')
taulu_famrel <- as.matrix(prop.table(table(alc$famrel, alc$high_use), 2))
taulu_famrel
dim(taulu_famrel)
str(taulu_famrel)
taulu_famrel[,1]
taulu_famrel <- as.matrix.data.frame(prop.table(table(alc$famrel, alc$high_use), 2))
str(taulu_famrel)
(taulu_famrel)
taulu_famrel <- data.frame(true = taulu_famrel[,1], false = taulu_famrel[,2])
taulu_famrel
ggplot(alc, aes(famrel, fill=high_use))+geom_bar(position='dodge')+
ggtitle("Family relations and alcohol use", subtitle = '1 - very bad to 5 - excellent')
plot(taulu_famrel)
taulu_famrel
ggplot(taulu_famrel)+geom_bar(position='dodge')+
ggtitle("Family relations and alcohol use", subtitle = '1 - very bad to 5 - excellent')
barplot(taulu_famrel, beside = T)
barplot(height=taulu_famrel, beside = T)
barplot(height=as.matrix(taulu_famrel), beside = T)
taulu_famrel <- as.matrix.data.frame(prop.table(table(alc$famrel, alc$high_use), 2))
barplot(taulu_famrel, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(taulu_famrel), beside=TRUE)
barplot(t(taulu_famrel), main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(taulu_famrel), beside=TRUE)
barplot(t(taulu_famrel), main="Car Distribution by Gears and VS",
xlab="Number of Gears", legend = rownames(taulu_famrel), beside=TRUE)
barplot(t(taulu_famrel), main="Car Distribution by Gears and VS",
xlab="Number of Gears", xlab = rownames(taulu_famrel), beside=TRUE)
?barplot
barplot(t(taulu_famrel), beside=TRUE)
barplot(t(taulu_famrel), axisnames = T, beside=TRUE)
barplot(t(taulu_famrel), legend.text = T, beside=TRUE)
barplot(t(taulu_famrel), names.arg = c('x', 'y'), beside=TRUE)
barplot(t(taulu_famrel), names.arg = c(LETTERS[1:5]), beside=TRUE)
barplot(t(taulu_famrel), names.arg = c(1:5), beside=TRUE)
barplot(t(taulu_famrel), names.arg = c(1:5), beside=TRUE, xlab = 'Family relations', ylab = 'Proportion', legend.text = c('True', 'False'))
barplot(t(taulu_famrel), names.arg = c(1:5), beside=TRUE, xlab = 'Family relations', ylab = 'Proportion', legend.text = c('High', 'Low'),
main = 'Family relations and alcohol use')
barplot(t(taulu_famrel), names.arg = c(1:5), beside=TRUE, xlab = 'Family relations', ylab = 'Proportion', legend.text = c('High', 'Low'),
main = 'Family relations and alcohol use')
barplot(t(taulu_famrel), names.arg = c(1:5), beside=TRUE, xlab = 'Family relations', ylab = 'Proportion', legend.text = c('High', 'Low'),
main = 'Family relations and alcohol use', sub = 'From 1 (very bad) to 5 (excellent)')
?barplot
barplot(t(taulu_famrel), names.arg = c(1:5), beside=TRUE, xlab = 'Family relations', ylab = 'Proportion', legend.text = c('High', 'Low'),
main = 'Family relations and alcohol use, from 1 (very bad) to 5 (excellent)')
barplot(t(taulu_famrel), names.arg = c(1:5), beside=TRUE, xlab = 'Family relations', ylab = 'Proportion', legend.text = c('High', 'Low'),
main = 'Family relations and alcohol use \nFrom 1 (very bad) to 5 (excellent)')
main = 'Family relations and alcohol use \nFrom 1 (very bad) to 5 (excellent)')
taulu_famrel <- (prop.table(table(alc$famrel, alc$high_use), 2))
barplot(t(taulu_famrel), names.arg = c(1:5), beside=TRUE, xlab = 'Family relations', ylab = 'Proportion', legend.text = c('High', 'Low'),
main = 'Family relations and alcohol use, from 1 (very bad) to 5 (excellent)')
taulu_famrel
taulu_famrel <- (prop.table(table(alc$famrel, alc$high_use), 2))
barplot(t(taulu_famrel), names.arg = c(1:5), beside=TRUE, xlab = 'Family relations', ylab = 'Proportion', legend.text = c('Low', 'High'),
main = 'Family relations and alcohol use, from 1 (very bad) to 5 (excellent)')
table(alc$absences, alc$high_use)
plot(density(alc$absences[!alc$high_use]), xlab='Absences')
lines(density(alc$absences[alc$high_use]), col='red')
legend(legend=c('High', 'Low'), x = 'topright', col = c('red', 'black'))
# ggplot(alc, aes(y = absences, x = high_use)) + geom_boxplot() + scale_y_log10()
boxplot(alc$absences ~ alc$high_use, horizontal=T,
main = 'High use of alcohol by absences', las=1,
xlab='Absences')
temp <- summary(alc$absences[alc$high_use])
temp <- rbind(temp, summary(alc$absences[!alc$high_use]))
table(alc$absences, alc$high_use)
plot(density(alc$absences[!alc$high_use]), xlab='Absences')
lines(density(alc$absences[alc$high_use]), col='red')
legend(legend=c('High', 'Low'), x = 'topright', col = c('red', 'black'))
boxplot(alc$absences ~ alc$high_use, horizontal=T,
main = 'High use of alcohol by absences', las=1,
xlab='Absences')
temp <- summary(alc$absences[alc$high_use])
temp <- rbind(temp, summary(alc$absences[!alc$high_use]))
temp
model <- glm(high_use ~ nursery + famsize + famrel + absences, data = alc, family = "binomial")
model <- glm(high_use ~ nursery + famsize + famrel + absences, data = alc, family = "binomial")
summary(model)
model$coefficients
exp(model$coefficients)
exp(rbind(model$coefficients, confint(model))
)
confint(modle)
confint(model)
exp(cbind(t(model$coefficients), confint(model))
exp(cbind(t(model$coefficients), confint(model)))
exp(cbind(t(model$coefficients), confint(model)))
t(model$coefficients)
exp(model$coefficients)
exp(model$coefficients)
exp(confint(model))
exp(model$coefficients)
exp(confint(model))
exp(model$coefficients)
exp(confint(model))
predictions <- predict(model, probability = 'response')
alc$predictions <- predict(model, probability = 'response')
hist(alc$predictions)
alc$predictions <- predict(model, type =  'response')
hist(alc$predictions)
alc$propability <- predict(model, type =  'response')
alc <- mutate(alc, prediction = probability > 0.5)
alc$probability <- predict(model, type =  'response')
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
