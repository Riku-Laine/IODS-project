abline(lm(a~b), col='red')
quit()
sessionInfo()
a <-matrix(c(10,59,99,75,41,58,45,1,33,56,78,56,102,85), byrow=F)
a
a <-matrix(c(10,59,99,75,41,58,45,1,33,56,78,56,102,85), byrow=F, ncol=2)
a
chisq.test(a)
?wilcox.test
rep(1:7,a[1,])
?rep
rep(1:7,eacha[1,])
rep(1:7,each=a[1,])
a
quit()
url <- http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt
lrn14 <- read.table(file = url, sep = '\t', header = T)
url <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
lrn14 <- read.table(file = url, sep = '\t', header = T)
dim(lrn14)
glimpse(lrn14)
str(lrn14)
colnames(lrn14)
rm(list=ls())
# Setting working directory with knitr.
library(knitr)
library(GGally)
opts_knit$set(root.dir ="C:/Users/Riku_L/Documents/GitHub/IODS-project/data")
# Read data
students2014 <- read.csv("data/learning2014.csv")
# First six rows of the data set
head(students2014)
# The dimensions
dim(students2014)
# Type of variables
str(students2014)
# Summaríes of the variables included in the data
summary(students2014)
par(mfrow=c(3,2))
for (i in 2:7) hist(students2014[,i], main = colnames(students2014)[i], xlab = NULL)
par(mfrow=c(1,1))
ggpairs(students2014[,-1])
# Model itself
model <- lm(Points ~ Attitude + Age + Stra_adj, data = students2014)
# Summary
summary(model)
# Remove variable age by update() function
model <- update(model, formula. = .~. - Age)
summary(model)
par(mfrow=c(2,2))
plot(model, which=c(1,2,4,5))
# First six rows of the data set
head(students2014)
# The dimensions
dim(students2014)
# Type of variables
str(students2014)
# Summaríes of the variables included in the data
summary(students2014)
t.test(students2014$Stra_adj, mu=3)
ggpairs(students2014[,-1], mapping = aes(colour=students2014gender))
ggpairs(students2014[,-1], mapping = ggplot2aes(colour=students$2014gender))
ggpairs(students2014[,-1], mapping = ggplot2::aes(colour=students$2014gender))
ggpairs(students2014[,-1], mapping = ggplot2::aes(colour=students2014$gender))
ggpairs(students2014[,-1], mapping = ggplot2::aes(colour='red'))
?ggpairs
ggpairs(students2014[,-1], mapping = ggplot2::aes(colour=gender))
ggpairs(students2014, mapping=ggplot2::aes(colour=gender))
?aes
?alpha
ggpairs(students2014, mapping=ggplot2::aes(colour=gender, alpha = 0.4))
ggpairs(students2014, mapping=ggplot2::aes(colour=gender, alpha = 0.4))
# Model itself
model <- lm(Points ~ Attitude + Age + Stra_adj, data = students2014)
# Summary
summary(model)
# Author: Riku Laine
# Date: Tue Nov 14 13:15:18 2017
# Project name: IODS week 2
# Description: This is a file for IODS week 2. The aim of this script is
# to create the data set used in further analysis.
# Importing libraries
library(MASS)
# Reading in data
url <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
lrn14 <- read.table(file = url, sep = '\t', header = T)
## Dimensions of the data
dim(lrn14)
# Data has 183 rows and 60 columns
colnames(lrn14)
# By the names of the columns, it seems that the data contains
# information about the participants' demographics and answers
# to self evaluation questions.
summary(lrn14$Age)
# Participants are 17-55 years old, whilst half of them are
# 21-27 years old (the interquartile range).
str(lrn14)
# Author: Riku Laine
# Date: Tue Nov 14 13:15:18 2017
# Project name: IODS week 2
# Description: This is a file for IODS week 2. The aim of this script is
# to create the data set used in further analysis.
# Importing libraries
library(MASS)
# Reading in data
url <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
lrn14 <- read.table(file = url, sep = '\t', header = T)
## Dimensions of the data
dim(lrn14)
# Data has 183 rows and 60 columns
colnames(lrn14)
# By the names of the columns, it seems that the data contains
# information about the participants' demographics and answers
# to self evaluation questions.
summary(lrn14$Age)
# Participants are 17-55 years old, whilst half of them are
# 21-27 years old (the interquartile range).
str(lrn14)
# Data is mostly numerical data, gender is coded as a factor with
# levels for males and females.
#### Creating the analysis data set ###
# Select the base variables gender, Age, Attitude and Points from
# data frame lrn14.
an_data <- dplyr::select(lrn14, gender, Age, Attitude, Points)
# Constructing the variables as was instructed by Kimmo in the
# meta page.
an_data$d_sm <- lrn14$D03 + lrn14$D11 + lrn14$D19 + lrn14$D27
an_data$d_ri <- lrn14$D07 + lrn14$D14 + lrn14$D22 + lrn14$D30
an_data$d_ue <- lrn14$D06 + lrn14$D15 + lrn14$D23 + lrn14$D31
an_data$su_lp <- lrn14$SU02 + lrn14$SU10 + lrn14$SU18 + lrn14$SU26
an_data$su_um <- lrn14$SU05 + lrn14$SU13 + lrn14$SU21 + lrn14$SU29
an_data$su_sb <- lrn14$SU08 + lrn14$SU16 + lrn14$SU24 + lrn14$SU32
an_data$st_os <- lrn14$ST01 + lrn14$ST09 + lrn14$ST17 + lrn14$ST25
an_data$st_tm <- lrn14$ST04 + lrn14$ST12 + lrn14$ST20 + lrn14$ST28
an_data$Deep <- an_data$d_sm + an_data$d_ri + an_data$d_ue
an_data$Surf <- an_data$su_lp + an_data$su_um + an_data$su_sb
an_data$Stra <- an_data$st_os + an_data$st_tm
an_data$Deep_adj <- an_data$Deep/12
an_data$Surf_adj <- an_data$Surf/12
an_data$Stra_adj <- an_data$Stra/8
# Omit observations which had zero points from the final exam.
an_data <- an_data[an_data$Points!=0,]
# Choose the desired columns for the final data set.
an_data <- an_data[,colnames(an_data) %in% c('gender', 'Age', 'Attitude', 'Points',
'Deep_adj', 'Surf_adj', 'Stra_adj')]
dim(an_data)
# Setting working directory with knitr.
library(knitr)
library(GGally)
opts_knit$set(root.dir ="C:/Users/Riku_L/Documents/GitHub/IODS-project/data")
# Read data
students2014 <- read.csv("data/learning2014.csv")
# First six rows of the data set
head(students2014)
# The dimensions
dim(students2014)
# Type of variables
str(students2014)
# Summaríes of the variables included in the data
summary(students2014)
par(mfrow=c(3,2))
for (i in 2:7) hist(students2014[,i], main = colnames(students2014)[i], xlab = NULL)
par(mfrow=c(1,1))
ggpairs(students2014[,-1])
ggpairs(students2014, mapping=ggplot2::aes(colour=gender, alpha = 0.4))
# Model itself
model <- lm(Points ~ Attitude + Age + Stra_adj, data = students2014)
# Summary
summary(model)
# Remove variable age by update() function
model <- update(model, formula. = .~. - Age)
summary(model)
plot(model, which=c(1,2,5))
par(mfrow=c(3,2))
for (i in 2:7) hist(students2014[,i], main = colnames(students2014)[i], xlab = NULL)
par(mfrow=c(1,1))
ggpairs(students2014[,-1])
ggpairs(students2014, mapping=ggplot2::aes(colour=gender, alpha = 0.4))
# Joana
# 14.11.2017
# This file is intended to work on my first attempts with the data-wrangling exercise.
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
# The data given provide (according to my RStudio) 183 observations for a total of 60 variables.
# Except for the variables of "Age", "Attitude", "Points", and "gender" the data are operationalzed on a scale from 1 - 5.
# The variable "gender" does not include numeric values as they are they are of a qualitative nature, but they are operationalized in the form of text in a binary fashion of "M" or "F".
# The variable "Age" - according to the info-page - is based on counting the number of years since the birthdate provided by the respondent.
#the data dimension:
dim(lrn14)
#the data-set's structure:
str(lrn14)
install.packages("tidyverse")
library(tidyverse)
install.packages("dplyr")
install.packages("ggplot2")
library(dplyr)
install.packages("GGally")
library(GGally)
library(ggplot2)
install.packages('ggplot2', dep = TRUE)
library(ggplot2)
# Data-wrangling attempts:
# printing and summarizing "gender"
lrn14$gender
summary(lrn14$gender)
# The printing of these data confirmed the binary character of the data. The summary supplied the information that the 183 observations are thus divided in 122 female and 61 male respondents.
# printing and summarizing "Age"
lrn14$Age
summary(lrn14$Age)
# The summary provided me with the age-range of the respondents from 17 to 55 years. The average-age of the respondents is 25,58 years. The median-age is 22.
#printing and summarizing "Points"
lrn14$points <- lrn14$Points / 10
lrn14$points
summary(lrn14$Points)
# The points reach from 0 to a maximum of 33. The average exam-points are 20,61. The Median-value of the Variable points is 22.00.
colnames(lrn14)
#Scaling down "Attitude" to attitude
lrn14$attitude <- lrn14$Attitude / 10
lrn14$attitude
summary(lrn14$attitude)
#At least that looks like it works...
#Let's try the combination of variables to "deep_questions" again:
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
summarise(deep_questions)
deep_questions
#creating the basic column:
deep_columns <- select(lrn14, one_of(deep_questions))
deep_columns
#applying means to "deep_columns":
lrn14$deep <- rowMeans(deep_columns)
lrn14$deep
# combining variables to "surface question"
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
surface_questions
summarise(surface_questions)
#creating "surface_columns"
surface_columns <- select(lrn14, one_of(surface_questions))
surface_columns
#applying means to "surface_columns"
lrn14$surf <- rowMeans(surface_columns)
lrn14$surf
summarise(lrn14$surf)
#creating variable "strategic_questions"
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
strategic_questions
summarise(strategic_questions)
#creating "strategic_columns"
strategic_columns <- select(lrn14, one_of (strategic_questions))
strategic_columns
#applying means to "strategic_columns"
lrn14$stra <- rowMeans(strategic_columns)
lrn14$stra
# keeping columns for new dataset
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "points")
learning2014 <- select (lrn14, one_of (keep_columns))
str(learning2014)
colnames((learning2014))
# Attempting to exclude those respondents who in their exams had "o" points
learning2014 <- filter(learning2014, points > "0")
str(learning2014)
dim(learning2014)
setwd("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project")
?write.csv
?write.table
write.csv(learning2014, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\learning2014.csv",row.names = FALSE)
read.table("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\learning2014.csv")
dim("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\learning2014.csv")
p1 <- ggplot(learning2014, aes(x = attitude, y = points))
p1 <- ggplot(learning2014, aes (x = attitude, y = points, col = gender))
p2 <- p1 + geom_point()
p2
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ggplot2", dep = TRUE)
# printing and summarizing "gender"
lrn14$gender
summary(lrn14$gender)
# The printing of these data confirmed the binary character of the data. The summary supplied the information that the 183 observations are thus divided in 122 female and 61 male respondents.
# printing and summarizing "Age"
lrn14$Age
summary(lrn14$Age)
# The summary provided me with the age-range of the respondents from 17 to 55 years. The average-age of the respondents is 25,58 years. The median-age is 22.
#printing and summarizing "Points"
lrn14$points <- lrn14$Points / 10
lrn14$points
summary(lrn14$Points)
# The points reach from 0 to a maximum of 33. The average exam-points are 20,61. The Median-value of the Variable points is 22.00.
colnames(lrn14)
#Scaling down "Attitude" to attitude
lrn14$attitude <- lrn14$Attitude / 10
lrn14$attitude
summary(lrn14$attitude)
#At least that looks like it works...
#Let's try the combination of variables to "deep_questions" again:
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
summarise(deep_questions)
deep_questions
#creating the basic column:
deep_columns <- select(lrn14, one_of(deep_questions))
deep_columns
#applying means to "deep_columns":
lrn14$deep <- rowMeans(deep_columns)
lrn14$deep
# combining variables to "surface question"
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
surface_questions
summarise(surface_questions)
#creating "surface_columns"
surface_columns <- select(lrn14, one_of(surface_questions))
surface_columns
#applying means to "surface_columns"
lrn14$surf <- rowMeans(surface_columns)
lrn14$surf
summarise(lrn14$surf)
#creating variable "strategic_questions"
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
strategic_questions
summarise(strategic_questions)
#creating "strategic_columns"
strategic_columns <- select(lrn14, one_of (strategic_questions))
strategic_columns
#applying means to "strategic_columns"
lrn14$stra <- rowMeans(strategic_columns)
lrn14$stra
# keeping columns for new dataset
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "points")
learning2014 <- select (lrn14, one_of (keep_columns))
str(learning2014)
colnames((learning2014))
# Attempting to exclude those respondents who in their exams had "o" points
learning2014 <- filter(learning2014, points > "0")
str(learning2014)
dim(learning2014)
setwd("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project")
?write.csv
?write.table
write.csv(learning2014, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\learning2014.csv",row.names = FALSE)
read.table("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\learning2014.csv")
dim("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\learning2014.csv")
p1 <- ggplot(learning2014, aes(x = attitude, y = points))
p1 <- ggplot(learning2014, aes (x = attitude, y = points, col = gender))
p2 <- p1 + geom_point()
p2
rm(list=ls())
?summarise
quti()
quit()
a<-matrix(c(2017,-5))
a
b<-matrix(c(-3,1,4,2), ncol=2)
b
c<-matrix(c(1,2))
a+b%*%c
1/2+4/5
(-2/5)^2-(1/5*(13/10))
4/10
13/50
getwd()
setwd("C:/Users/Riku_L/Documents/GitHub/IODS-project/data/")
stumat <- read.csv("student-mat.csv")
stumat <- read.csv("student-mat.csv", sep=",")
stumat
stumat <- read.csv2("student-mat.csv", sep=",")
stumat <- read.csv("student-mat.csv", sep=";")
stumat
dim(stumat)
stupor <- read.csv("student-por.csv", sep=";")
dim(stumat)
dim(stupor)
str(stumat)
str(stupor)
e
exp(1)
all.equal(colnames(stumat), colnames(stupor))
head(stumat)
join_variables <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery","internet")
library(dplyr)
joined_data <- inner_join(stumat, stupor, by = join_variables)
str(joined_data)
joined_data <- inner_join(stumat, stupor, by = join_variables, suffix = c("-mat", "-por"))
str(joined_data)
joined_data
head(joined_data)
table(joined_data$`Walc-mat`==joined_data$`Walc-por`)
joined_data[(joined_data$`Walc-mat`==joined_data$`Walc-por`),]
"por" %in% colnames(joined_data)
colnames(joined_data) %in%  "por"
pmatch("por" ,colnames(joined_data))
pmatch("por" ,colnames(joined_data), duplicates.ok = T)
pmatch("hea" ,colnames(joined_data), duplicates.ok = T)
colnames(joined_data)
pmatch("Fedu" ,colnames(joined_data), duplicates.ok = T)
charmatch("Fedu" ,colnames(joined_data))
charmatch("por" ,colnames(joined_data))
?grep
grep("[a-z0-9]*-por", colnames(joined_data))
grep("[a-z0-9]*-mat", colnames(joined_data))
stumat
alc <- stumat[colnames(stumat) %in% join_variables]
for(column_name in notjoined_columns) {
two_columns <- select(stumat, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
joined_data[column_name] <- round(rowMeans(two_columns))
} else {
joined_data[column_name] <- first_column
}
}
rm(list=ls())
for(column_name in notjoined_columns) {
two_columns <- select(stumat, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# Author: Riku Laine
# Date: Tue Nov 21 12:04:36 2017
# Project name: Riku Laine
# Description
# --------------
# Author:
# Date:
# Modification:
# --------------
# Preparations (source() and library())
library(dplyr)
#### Importing data
# Set working directory
setwd("C:/Users/Riku_L/Documents/GitHub/IODS-project/data/")
# Reading the csv files
stumat <- read.csv("student-mat.csv", sep=";")
stupor <- read.csv("student-por.csv", sep=";")
# Explore structures and dimensions
dim(stumat)
dim(stupor)
# Stumat has 395 rows and stupor has 649 rows, both have 33 columns.
str(stumat)
str(stupor)
# It seems both include some information from the respondents' demographic
# background and alcohol use.
# Check if all column names are the same
all.equal(colnames(stumat), colnames(stupor))
# They are.
#### Merging
join_variables <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery","internet")
joined_data <- inner_join(stumat, stupor, by = join_variables, suffix = c("-mat", "-por"))
# Structure and dimensions
str(joined_data)
# It seems that the columns which were used to combine sets haven't
# duplicated while the others have.
notjoined_columns <- colnames(stumat)[!colnames(stumat) %in% join_variables]
alc <- stumat[colnames(stumat) %in% join_variables]
for(column_name in notjoined_columns) {
two_columns <- select(stumat, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
alc
glimpse(alc)
# Author: Riku Laine
# Date: Tue Nov 21 12:04:36 2017
# Project name: Riku Laine
# Description
# --------------
# Author:
# Date:
# Modification:
# --------------
# Preparations (source() and library())
library(dplyr)
#### Importing data
# Set working directory
setwd("C:/Users/Riku_L/Documents/GitHub/IODS-project/data/")
# Reading the csv files
stumat <- read.csv("student-mat.csv", sep=";")
stupor <- read.csv("student-por.csv", sep=";")
# Explore structures and dimensions
dim(stumat)
dim(stupor)
# Stumat has 395 rows and stupor has 649 rows, both have 33 columns.
str(stumat)
str(stupor)
# It seems both include some information from the respondents' demographic
# background and alcohol use.
# Check if all column names are the same
all.equal(colnames(stumat), colnames(stupor))
# They are.
#### Merging
join_variables <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery","internet")
joined_data <- inner_join(stumat, stupor, by = join_variables, suffix = c("-mat", "-por"))
# Structure and dimensions
str(joined_data)
# It seems that the columns which were used to combine sets haven't
# duplicated while the others have.
notjoined_columns <- colnames(stumat)[!colnames(stumat) %in% join_variables]
alc <- joined_data[colnames(joined_data) %in% join_variables]
for(column_name in notjoined_columns) {
two_columns <- select(stumat, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
quit()
